{"ast":null,"code":"var _jsxFileName = \"/Users/nickenglezakis/Desktop/Codeclan/Capstone_Project/Inventory_Management_Project/client/src/containers/InventoryContainer.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport LaptopList from \"../components/laptops/LaptopList\";\nimport MobilePhoneList from \"../components/mobilePhones/mobilePhoneList\";\nimport TvList from \"../components/tvs/Tvlist\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InventoryContainer = () => {\n  _s();\n\n  const [mobilePhones, setMobilePhones] = useState([]);\n  const [laptops, setLaptops] = useState([]);\n  const [tvs, setTvs] = useState([]);\n  useEffect(() => {\n    fetchLaptops();\n  }, []);\n\n  const fetchLaptops = () => {\n    fetch('http://localhost:8080/api/laptops').then(response => response.json()).then(data => setLaptops(data));\n  };\n\n  useEffect(() => {\n    fetchMobilePhones();\n  }, []);\n\n  const fetchMobilePhones = () => {\n    fetch('http://localhost:8080/api/mobilephones').then(response => response.json()).then(data => setMobilePhones(data));\n  };\n\n  useEffect(() => {\n    fetchTvs();\n  }, []);\n\n  const fetchTvs = () => {\n    fetch('http://localhost:8080/api/tvs').then(response => response.json()).then(data => setTvs(data));\n  }; // const inventory = laptops.concat(mobilePhones)\n  // useEffect (() => {\n  //   fetchInventory();\n  // }, [])\n  // const fetchInventory = () => {\n  //   fetch('http://localhost:8080/api/laptops')\n  //   fetch('http://localhost:8080/api/tvs')\n  //   fetch('http://localhost:8080/api/mobilephones')\n  //   .then(response => response.json())\n  //   .then(data => setInventory(data))\n  // }\n  // useEffect(() => {\n  //   let fetches = createFetches()\n  //   Promise.all(fetches)\n  //   .then(response => response.json())\n  //   .then(data => setInventory(data))\n  // }, [])\n  // const createFetches = () => {\n  // let fetches = [];\n  // fetches.add(fetch('http://localhost:8080/api/tvs'));\n  // fetches.add(fetch('http://localhost:8080/api/mobilephones'));\n  // fetches.add(fetch('http://localhost:8080/api/laptops'));\n  // return fetches;\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          render: () => {\n            return inventory;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InventoryContainer, \"RMz0ztk6q0UoAYjyr5QX7YqDVFQ=\");\n\n_c = InventoryContainer;\nexport default InventoryContainer; // useEffect(() => {\n//     let fetches = createFetches()\n//     Promise.all(fetches)\n//     .then(response => response.json())\n//     .then(data => setInVENTORY(data))\n//   }, [])\n//   const createFetches = () => {\n//     let fetches = [];\n//     fetches.add(fetch('http://localhost:8080/api/tvs'));\n//     fetches.add(fetch('http://localhost:8080/api/monitors'));\n//     fetches.add(fetch('http://localhost:8080/api/laptops'));\n//     return fetches;\n\nvar _c;\n\n$RefreshReg$(_c, \"InventoryContainer\");","map":{"version":3,"sources":["/Users/nickenglezakis/Desktop/Codeclan/Capstone_Project/Inventory_Management_Project/client/src/containers/InventoryContainer.js"],"names":["Fragment","useState","useEffect","BrowserRouter","Router","Route","Switch","LaptopList","MobilePhoneList","TvList","InventoryContainer","mobilePhones","setMobilePhones","laptops","setLaptops","tvs","setTvs","fetchLaptops","fetch","then","response","json","data","fetchMobilePhones","fetchTvs","inventory"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,QAAnB,EAA6BC,SAA7B,QAA8C,OAA9C;AACA,SAAQC,aAAa,IAAIC,MAAzB,EAAiCC,KAAjC,EAAwCC,MAAxC,QAAqD,kBAArD;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,OAAOC,eAAP,MAA4B,4CAA5B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;;AAGA,MAAMC,kBAAkB,GAAG,MAAM;AAAA;;AAE/B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAE,EAAF,CAAhD;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACc,GAAD,EAAMC,MAAN,IAAgBf,QAAQ,CAAE,EAAF,CAA9B;AAGAC,EAAAA,SAAS,CAAE,MAAM;AACfe,IAAAA,YAAY;AAEb,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMA,YAAY,GAAG,MAAM;AAC3BC,IAAAA,KAAK,CAAC,mCAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAIR,UAAU,CAACQ,IAAD,CAFxB;AAGD,GAJC;;AAMApB,EAAAA,SAAS,CAAC,MAAM;AACdqB,IAAAA,iBAAiB;AAClB,GAFQ,EAEP,EAFO,CAAT;;AAKA,QAAMA,iBAAiB,GAAG,MAAM;AAC9BL,IAAAA,KAAK,CAAC,wCAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAIV,eAAe,CAACU,IAAD,CAF7B;AAGD,GAJD;;AAMApB,EAAAA,SAAS,CAAC,MAAM;AACZsB,IAAAA,QAAQ;AACX,GAFQ,EAEP,EAFO,CAAT;;AAKA,QAAMA,QAAQ,GAAG,MAAM;AACrBN,IAAAA,KAAK,CAAC,+BAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAIN,MAAM,CAACM,IAAD,CAFpB;AAGD,GAJD,CAlC+B,CAyC/B;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACE,QAAC,MAAD;AAAA,2BACA,QAAC,QAAD;AAAA,6BACE,QAAC,MAAD;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,MAAM,EAAE,MAAM;AACnB,mBAAOG,SAAP;AACD;AAFD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAlFD;;GAAMf,kB;;KAAAA,kB;AAoFN,eAAeA,kBAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { Fragment, useState, useEffect } from \"react\"\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport LaptopList from \"../components/laptops/LaptopList\";\nimport MobilePhoneList from \"../components/mobilePhones/mobilePhoneList\";\nimport TvList from \"../components/tvs/Tvlist\";\n\n\nconst InventoryContainer = () => {\n\n  const [mobilePhones, setMobilePhones] = useState ([])\n  const [laptops, setLaptops] = useState([])\n  const [tvs, setTvs] = useState ([])\n\n\n  useEffect (() => {\n    fetchLaptops();\n    \n  }, [])\n\n  const fetchLaptops = () => {\n  fetch('http://localhost:8080/api/laptops')\n  .then(response => response.json())\n  .then(data => setLaptops(data))\n}\n\n  useEffect(() => {\n    fetchMobilePhones();\n  },[])\n\n\n  const fetchMobilePhones = () => {\n    fetch('http://localhost:8080/api/mobilephones')\n    .then(response => response.json())\n    .then(data => setMobilePhones(data))\n  }\n\n  useEffect(() => {\n      fetchTvs();\n  },[])\n\n\n  const fetchTvs = () => {\n    fetch('http://localhost:8080/api/tvs')\n    .then(response => response.json())\n    .then(data => setTvs(data))\n  }\n\n\n  // const inventory = laptops.concat(mobilePhones)\n  \n  \n  // useEffect (() => {\n  //   fetchInventory();\n  // }, [])\n\n  // const fetchInventory = () => {\n  //   fetch('http://localhost:8080/api/laptops')\n  //   fetch('http://localhost:8080/api/tvs')\n  //   fetch('http://localhost:8080/api/mobilephones')\n  //   .then(response => response.json())\n  //   .then(data => setInventory(data))\n  // }\n\n  // useEffect(() => {\n  //   let fetches = createFetches()\n  //   Promise.all(fetches)\n  //   .then(response => response.json())\n  //   .then(data => setInventory(data))\n  // }, [])\n  \n  // const createFetches = () => {\n  // let fetches = [];\n  // fetches.add(fetch('http://localhost:8080/api/tvs'));\n  // fetches.add(fetch('http://localhost:8080/api/mobilephones'));\n  // fetches.add(fetch('http://localhost:8080/api/laptops'));\n  // return fetches;\n  // }\n\n  return(\n    <Router>\n    <Fragment>\n      <Switch>\n        <Route render={() => {\n          return inventory;\n        }}/>\n      </Switch>\n    </Fragment>\n  </Router>\n  )\n}\n\nexport default InventoryContainer;\n\n// useEffect(() => {\n//     let fetches = createFetches()\n//     Promise.all(fetches)\n//     .then(response => response.json())\n//     .then(data => setInVENTORY(data))\n//   }, [])\n  \n//   const createFetches = () => {\n//     let fetches = [];\n//     fetches.add(fetch('http://localhost:8080/api/tvs'));\n//     fetches.add(fetch('http://localhost:8080/api/monitors'));\n//     fetches.add(fetch('http://localhost:8080/api/laptops'));\n//     return fetches;\n  "]},"metadata":{},"sourceType":"module"}