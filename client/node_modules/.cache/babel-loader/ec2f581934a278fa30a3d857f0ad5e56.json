{"ast":null,"code":"var _jsxFileName = \"/Users/nickenglezakis/Desktop/Codeclan/Capstone_Project/Inventory_Management_Project/client/src/containers/InventoryContainer.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport LaptopList from \"../components/laptops/LaptopList\";\nimport MobilePhoneList from \"../components/mobilePhones/mobilePhoneList\";\nimport TvList from \"../components/tvs/Tvlist\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst InventoryContainer = () => {\n  _s();\n\n  const [mobilePhones, setMobilePhones] = useState([]);\n  const [laptops, setLaptops] = useState([]);\n  const [tvs, setTvs] = useState([]);\n  const [inventory, setInventory] = useState([]);\n  useEffect(() => {\n    fetchLaptops();\n  }, []);\n\n  const fetchLaptops = () => {\n    console.log(\"fetch called\");\n    fetch('http://localhost:8080/api/laptops').then(response => response.json()).then(data => setLaptops(data));\n  };\n\n  useEffect(() => {\n    fetchMobilePhones();\n  }, []);\n\n  const fetchMobilePhones = () => {\n    fetch('http://localhost:8080/api/mobilephones').then(response => response.json()).then(data => setMobilePhones(data));\n  };\n\n  useEffect(() => {\n    fetchTvs();\n  }, []);\n\n  const fetchTvs = () => {\n    fetch('http://localhost:8080/api/tvs').then(response => response.json()).then(data => setTvs(data));\n  };\n\n  useEffect(() => {\n    if (mobilePhones.length > 0 && laptops.length > 0 && tvs.length > 0) {\n      let combined = [...mobilePhones, ...laptops, ...tvs];\n      setInventory(combined);\n    }\n  }, [mobilePhones, tvs, laptops]);\n  const itemElements = inventory.map(item => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: item.manufacturer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 8\n        }, this), \" \", item.model]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: item / productNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true);\n  });\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: itemElements\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InventoryContainer, \"qB8cBqfcZcG2l7eYrVDDjZ7apiI=\");\n\n_c = InventoryContainer;\nexport default InventoryContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"InventoryContainer\");","map":{"version":3,"sources":["/Users/nickenglezakis/Desktop/Codeclan/Capstone_Project/Inventory_Management_Project/client/src/containers/InventoryContainer.js"],"names":["Fragment","useState","useEffect","BrowserRouter","Router","Route","Switch","LaptopList","MobilePhoneList","TvList","InventoryContainer","mobilePhones","setMobilePhones","laptops","setLaptops","tvs","setTvs","inventory","setInventory","fetchLaptops","console","log","fetch","then","response","json","data","fetchMobilePhones","fetchTvs","length","combined","itemElements","map","item","manufacturer","model","productNumber"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,QAAnB,EAA6BC,SAA7B,QAA8C,OAA9C;AACA,SAAQC,aAAa,IAAIC,MAAzB,EAAiCC,KAAjC,EAAwCC,MAAxC,QAAqD,kBAArD;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,OAAOC,eAAP,MAA4B,4CAA5B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;;;AAGA,MAAMC,kBAAkB,GAAG,MAAM;AAAA;;AAE/B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAE,EAAF,CAAhD;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACc,GAAD,EAAMC,MAAN,IAAgBf,QAAQ,CAAE,EAAF,CAA9B;AACA,QAAM,CAACgB,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,CAAC,EAAD,CAA1C;AAGAC,EAAAA,SAAS,CAAE,MAAM;AACfiB,IAAAA,YAAY;AAEb,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMA,YAAY,GAAG,MAAM;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACFC,IAAAA,KAAK,CAAC,mCAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAIZ,UAAU,CAACY,IAAD,CAFxB;AAGD,GALC;;AAOAxB,EAAAA,SAAS,CAAC,MAAM;AACdyB,IAAAA,iBAAiB;AAClB,GAFQ,EAEP,EAFO,CAAT;;AAKA,QAAMA,iBAAiB,GAAG,MAAM;AAC9BL,IAAAA,KAAK,CAAC,wCAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAId,eAAe,CAACc,IAAD,CAF7B;AAGD,GAJD;;AAMAxB,EAAAA,SAAS,CAAC,MAAM;AACZ0B,IAAAA,QAAQ;AACX,GAFQ,EAEP,EAFO,CAAT;;AAKA,QAAMA,QAAQ,GAAG,MAAM;AACrBN,IAAAA,KAAK,CAAC,+BAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAIV,MAAM,CAACU,IAAD,CAFpB;AAGD,GAJD;;AAMAxB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGS,YAAY,CAACkB,MAAb,GAAsB,CAAtB,IAA2BhB,OAAO,CAACgB,MAAR,GAAiB,CAA5C,IAAiDd,GAAG,CAACc,MAAJ,GAAa,CAAjE,EAAmE;AACjE,UAAIC,QAAQ,GAAG,CAAC,GAAGnB,YAAJ,EAAkB,GAAGE,OAArB,EAA8B,GAAGE,GAAjC,CAAf;AACAG,MAAAA,YAAY,CAACY,QAAD,CAAZ;AACD;AAEF,GANQ,EAMN,CAACnB,YAAD,EAAeI,GAAf,EAAoBF,OAApB,CANM,CAAT;AAQA,QAAMkB,YAAY,GAAGd,SAAS,CAACe,GAAV,CAAeC,IAAD,IAAU;AAC3C,wBACA;AAAA,8BACA;AAAA,gCAAG;AAAA,oBAAIA,IAAI,CAACC;AAAT;AAAA;AAAA;AAAA;AAAA,gBAAH,OAA+BD,IAAI,CAACE,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAA,kBAAIF,IAAI,GAACG;AAAT;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA,oBADA;AAMD,GAPoB,CAArB;AASA,sBAEE,QAAC,QAAD;AAAA,cACGL;AADH;AAAA;AAAA;AAAA;AAAA,UAFF;AAOD,CAlED;;GAAMrB,kB;;KAAAA,kB;AAoEN,eAAeA,kBAAf","sourcesContent":["import { Fragment, useState, useEffect } from \"react\"\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport LaptopList from \"../components/laptops/LaptopList\";\nimport MobilePhoneList from \"../components/mobilePhones/mobilePhoneList\";\nimport TvList from \"../components/tvs/Tvlist\";\n\n\nconst InventoryContainer = () => {\n\n  const [mobilePhones, setMobilePhones] = useState ([])\n  const [laptops, setLaptops] = useState([])\n  const [tvs, setTvs] = useState ([])\n  const [inventory, setInventory] = useState([])\n\n\n  useEffect (() => {\n    fetchLaptops();\n    \n  }, [])\n\n  const fetchLaptops = () => {\n    console.log(\"fetch called\");\n  fetch('http://localhost:8080/api/laptops')\n  .then(response => response.json())\n  .then(data => setLaptops(data))\n}\n\n  useEffect(() => {\n    fetchMobilePhones();\n  },[])\n\n\n  const fetchMobilePhones = () => {\n    fetch('http://localhost:8080/api/mobilephones')\n    .then(response => response.json())\n    .then(data => setMobilePhones(data))\n  }\n\n  useEffect(() => {\n      fetchTvs();\n  },[])\n\n\n  const fetchTvs = () => {\n    fetch('http://localhost:8080/api/tvs')\n    .then(response => response.json())\n    .then(data => setTvs(data))\n  }\n\n  useEffect(() => {\n    if(mobilePhones.length > 0 && laptops.length > 0 && tvs.length > 0){\n      let combined = [...mobilePhones, ...laptops, ...tvs];\n      setInventory(combined)\n    }\n\n  }, [mobilePhones, tvs, laptops])\n\n  const itemElements = inventory.map((item) => {\n    return ( \n    <>\n    <p><b>{item.manufacturer}</b> {item.model}</p>\n    <p>{item/productNumber}</p>\n    </>\n    )\n  })\n\n  return(\n\n    <Fragment>\n      {itemElements}\n    </Fragment>\n\n  )\n}\n\nexport default InventoryContainer;\n"]},"metadata":{},"sourceType":"module"}